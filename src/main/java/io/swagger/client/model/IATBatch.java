/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.BatchControl;
import io.swagger.client.model.IATBatchHeader;
import io.swagger.client.model.IATEntryDetail;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * IATBatch
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class IATBatch {
  @SerializedName("ID")
  private String ID = null;

  @SerializedName("IATBatchHeader")
  private IATBatchHeader iaTBatchHeader = null;

  @SerializedName("IATEntryDetails")
  private List<IATEntryDetail> iaTEntryDetails = new ArrayList<IATEntryDetail>();

  @SerializedName("batchControl")
  private BatchControl batchControl = null;

  public IATBatch ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Client-defined string used as a reference to this record.
   * @return ID
  **/
  @Schema(example = "a747e53f", description = "Client-defined string used as a reference to this record.")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public IATBatch iaTBatchHeader(IATBatchHeader iaTBatchHeader) {
    this.iaTBatchHeader = iaTBatchHeader;
    return this;
  }

   /**
   * Get iaTBatchHeader
   * @return iaTBatchHeader
  **/
  @Schema(required = true, description = "")
  public IATBatchHeader getIaTBatchHeader() {
    return iaTBatchHeader;
  }

  public void setIaTBatchHeader(IATBatchHeader iaTBatchHeader) {
    this.iaTBatchHeader = iaTBatchHeader;
  }

  public IATBatch iaTEntryDetails(List<IATEntryDetail> iaTEntryDetails) {
    this.iaTEntryDetails = iaTEntryDetails;
    return this;
  }

  public IATBatch addIaTEntryDetailsItem(IATEntryDetail iaTEntryDetailsItem) {
    this.iaTEntryDetails.add(iaTEntryDetailsItem);
    return this;
  }

   /**
   * Get iaTEntryDetails
   * @return iaTEntryDetails
  **/
  @Schema(required = true, description = "")
  public List<IATEntryDetail> getIaTEntryDetails() {
    return iaTEntryDetails;
  }

  public void setIaTEntryDetails(List<IATEntryDetail> iaTEntryDetails) {
    this.iaTEntryDetails = iaTEntryDetails;
  }

  public IATBatch batchControl(BatchControl batchControl) {
    this.batchControl = batchControl;
    return this;
  }

   /**
   * Get batchControl
   * @return batchControl
  **/
  @Schema(required = true, description = "")
  public BatchControl getBatchControl() {
    return batchControl;
  }

  public void setBatchControl(BatchControl batchControl) {
    this.batchControl = batchControl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IATBatch iaTBatch = (IATBatch) o;
    return Objects.equals(this.ID, iaTBatch.ID) &&
        Objects.equals(this.iaTBatchHeader, iaTBatch.iaTBatchHeader) &&
        Objects.equals(this.iaTEntryDetails, iaTBatch.iaTEntryDetails) &&
        Objects.equals(this.batchControl, iaTBatch.batchControl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, iaTBatchHeader, iaTEntryDetails, batchControl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IATBatch {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    iaTBatchHeader: ").append(toIndentedString(iaTBatchHeader)).append("\n");
    sb.append("    iaTEntryDetails: ").append(toIndentedString(iaTEntryDetails)).append("\n");
    sb.append("    batchControl: ").append(toIndentedString(batchControl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
