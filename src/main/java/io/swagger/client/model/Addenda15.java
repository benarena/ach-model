/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Addenda15
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class Addenda15 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("typeCode")
  private String typeCode = null;

  @SerializedName("receiverIDNumber")
  private String receiverIDNumber = null;

  @SerializedName("receiverStreetAddress")
  private String receiverStreetAddress = null;

  @SerializedName("entryDetailSequenceNumber")
  private BigDecimal entryDetailSequenceNumber = null;

  public Addenda15 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Client-defined string used as a reference to this record.
   * @return id
  **/
  @Schema(example = "5ca8d25a", description = "Client-defined string used as a reference to this record.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Addenda15 typeCode(String typeCode) {
    this.typeCode = typeCode;
    return this;
  }

   /**
   * 15 - NACHA regulations
   * @return typeCode
  **/
  @Schema(example = "15", required = true, description = "15 - NACHA regulations")
  public String getTypeCode() {
    return typeCode;
  }

  public void setTypeCode(String typeCode) {
    this.typeCode = typeCode;
  }

  public Addenda15 receiverIDNumber(String receiverIDNumber) {
    this.receiverIDNumber = receiverIDNumber;
    return this;
  }

   /**
   * Receiver Identification Number contains the accounting number by which the Originator is known to the Receiver for descriptive purposes. NACHA Rules recommend but do not require the RDFI to print the contents of this field on the receiver&#x27;s statement. 
   * @return receiverIDNumber
  **/
  @Schema(example = "98765432", description = "Receiver Identification Number contains the accounting number by which the Originator is known to the Receiver for descriptive purposes. NACHA Rules recommend but do not require the RDFI to print the contents of this field on the receiver's statement. ")
  public String getReceiverIDNumber() {
    return receiverIDNumber;
  }

  public void setReceiverIDNumber(String receiverIDNumber) {
    this.receiverIDNumber = receiverIDNumber;
  }

  public Addenda15 receiverStreetAddress(String receiverStreetAddress) {
    this.receiverStreetAddress = receiverStreetAddress;
    return this;
  }

   /**
   * Receiver&#x27;s physical address
   * @return receiverStreetAddress
  **/
  @Schema(example = "123 1st St", required = true, description = "Receiver's physical address")
  public String getReceiverStreetAddress() {
    return receiverStreetAddress;
  }

  public void setReceiverStreetAddress(String receiverStreetAddress) {
    this.receiverStreetAddress = receiverStreetAddress;
  }

  public Addenda15 entryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
    return this;
  }

   /**
   * EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record&#x27;s trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. 
   * @return entryDetailSequenceNumber
  **/
  @Schema(example = "2618117", required = true, description = "EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record's trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. ")
  public BigDecimal getEntryDetailSequenceNumber() {
    return entryDetailSequenceNumber;
  }

  public void setEntryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Addenda15 addenda15 = (Addenda15) o;
    return Objects.equals(this.id, addenda15.id) &&
        Objects.equals(this.typeCode, addenda15.typeCode) &&
        Objects.equals(this.receiverIDNumber, addenda15.receiverIDNumber) &&
        Objects.equals(this.receiverStreetAddress, addenda15.receiverStreetAddress) &&
        Objects.equals(this.entryDetailSequenceNumber, addenda15.entryDetailSequenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, typeCode, receiverIDNumber, receiverStreetAddress, entryDetailSequenceNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Addenda15 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    typeCode: ").append(toIndentedString(typeCode)).append("\n");
    sb.append("    receiverIDNumber: ").append(toIndentedString(receiverIDNumber)).append("\n");
    sb.append("    receiverStreetAddress: ").append(toIndentedString(receiverStreetAddress)).append("\n");
    sb.append("    entryDetailSequenceNumber: ").append(toIndentedString(entryDetailSequenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
