/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BatchHeader
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class BatchHeader {
  @SerializedName("ID")
  private String ID = null;

  @SerializedName("serviceClassCode")
  private Integer serviceClassCode = null;

  @SerializedName("companyName")
  private String companyName = null;

  @SerializedName("companyDiscretionaryData")
  private String companyDiscretionaryData = null;

  @SerializedName("companyIdentification")
  private String companyIdentification = null;

  @SerializedName("standardEntryClassCode")
  private String standardEntryClassCode = null;

  @SerializedName("companyEntryDescription")
  private String companyEntryDescription = null;

  @SerializedName("companyDescriptiveDate")
  private String companyDescriptiveDate = null;

  @SerializedName("effectiveEntryDate")
  private String effectiveEntryDate = null;

  @SerializedName("originatorStatusCode")
  private Integer originatorStatusCode = null;

  @SerializedName("ODFIIdentification")
  private String odFIIdentification = null;

  @SerializedName("batchNumber")
  private Integer batchNumber = null;

  public BatchHeader ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * A client-defined ID used as a reference to this batch
   * @return ID
  **/
  @Schema(example = "913b5742", description = "A client-defined ID used as a reference to this batch")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public BatchHeader serviceClassCode(Integer serviceClassCode) {
    this.serviceClassCode = serviceClassCode;
    return this;
  }

   /**
   * Service Class Code - Mixed Debits and Credits &#x27;200&#x27;, ACH Credits Only &#x27;220&#x27;, or ACH Debits Only &#x27;225&#x27;
   * @return serviceClassCode
  **/
  @Schema(example = "220", required = true, description = "Service Class Code - Mixed Debits and Credits '200', ACH Credits Only '220', or ACH Debits Only '225'")
  public Integer getServiceClassCode() {
    return serviceClassCode;
  }

  public void setServiceClassCode(Integer serviceClassCode) {
    this.serviceClassCode = serviceClassCode;
  }

  public BatchHeader companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Company originating the entries in the batch
   * @return companyName
  **/
  @Schema(example = "Acme Corp", required = true, description = "Company originating the entries in the batch")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public BatchHeader companyDiscretionaryData(String companyDiscretionaryData) {
    this.companyDiscretionaryData = companyDiscretionaryData;
    return this;
  }

   /**
   * The 9 digit FEIN number (proceeded by a predetermined alpha or numeric character) of the entity in the company name field
   * @return companyDiscretionaryData
  **/
  @Schema(example = "123456789", description = "The 9 digit FEIN number (proceeded by a predetermined alpha or numeric character) of the entity in the company name field")
  public String getCompanyDiscretionaryData() {
    return companyDiscretionaryData;
  }

  public void setCompanyDiscretionaryData(String companyDiscretionaryData) {
    this.companyDiscretionaryData = companyDiscretionaryData;
  }

  public BatchHeader companyIdentification(String companyIdentification) {
    this.companyIdentification = companyIdentification;
    return this;
  }

   /**
   * Alphanumeric code used to identify an Originator. The Company Identification Field must be included on all prenotification records and on each entry initiated pursuant to such prenotification. The Company ID may begin with the ANSI one-digit Identification Code Designator (ICD), followed by the identification number. Possible ICDs are the IRS Employer Identification Number (EIN) \&quot;1\&quot;, Data Universal Numbering Systems (DUNS) \&quot;3\&quot;, or User Assigned Number \&quot;9\&quot;. 
   * @return companyIdentification
  **/
  @Schema(example = "121042882", required = true, description = "Alphanumeric code used to identify an Originator. The Company Identification Field must be included on all prenotification records and on each entry initiated pursuant to such prenotification. The Company ID may begin with the ANSI one-digit Identification Code Designator (ICD), followed by the identification number. Possible ICDs are the IRS Employer Identification Number (EIN) \"1\", Data Universal Numbering Systems (DUNS) \"3\", or User Assigned Number \"9\". ")
  public String getCompanyIdentification() {
    return companyIdentification;
  }

  public void setCompanyIdentification(String companyIdentification) {
    this.companyIdentification = companyIdentification;
  }

  public BatchHeader standardEntryClassCode(String standardEntryClassCode) {
    this.standardEntryClassCode = standardEntryClassCode;
    return this;
  }

   /**
   * Identifies the payment type (product) found within an ACH batch using a 3-character code.
   * @return standardEntryClassCode
  **/
  @Schema(example = "PPD", required = true, description = "Identifies the payment type (product) found within an ACH batch using a 3-character code.")
  public String getStandardEntryClassCode() {
    return standardEntryClassCode;
  }

  public void setStandardEntryClassCode(String standardEntryClassCode) {
    this.standardEntryClassCode = standardEntryClassCode;
  }

  public BatchHeader companyEntryDescription(String companyEntryDescription) {
    this.companyEntryDescription = companyEntryDescription;
    return this;
  }

   /**
   * A description of the entries contained in the batch. The Originator establishes the value of this field to provide a description of the purpose of the entry to be displayed back to the receiver. For example, \&quot;GAS BILL,\&quot; \&quot;REG. SALARY,\&quot; \&quot;INS. PREM,\&quot;, \&quot;SOC. SEC.,\&quot; \&quot;DTC,\&quot; \&quot;TRADE PAY,\&quot; \&quot;PURCHASE,\&quot; etc. This field must contain the word \&quot;REVERSAL\&quot; (left justified) when the batch contains reversing entries. This field must contain the word \&quot;RECLAIM\&quot; (left justified) when the batch contains reclamation entries. This field must contain the word \&quot;NONSETTLED\&quot; (left justified) when the batch contains entries which could not settle. 
   * @return companyEntryDescription
  **/
  @Schema(example = "PURCHASE", description = "A description of the entries contained in the batch. The Originator establishes the value of this field to provide a description of the purpose of the entry to be displayed back to the receiver. For example, \"GAS BILL,\" \"REG. SALARY,\" \"INS. PREM,\", \"SOC. SEC.,\" \"DTC,\" \"TRADE PAY,\" \"PURCHASE,\" etc. This field must contain the word \"REVERSAL\" (left justified) when the batch contains reversing entries. This field must contain the word \"RECLAIM\" (left justified) when the batch contains reclamation entries. This field must contain the word \"NONSETTLED\" (left justified) when the batch contains entries which could not settle. ")
  public String getCompanyEntryDescription() {
    return companyEntryDescription;
  }

  public void setCompanyEntryDescription(String companyEntryDescription) {
    this.companyEntryDescription = companyEntryDescription;
  }

  public BatchHeader companyDescriptiveDate(String companyDescriptiveDate) {
    this.companyDescriptiveDate = companyDescriptiveDate;
    return this;
  }

   /**
   * The Originator establishes this field as the date it would like to see displayed to the receiver for descriptive purposes. This field is never used to control timing of any computer or manual operation. It is solely for descriptive purposes. The RDFI should not assume any specific format. 
   * @return companyDescriptiveDate
  **/
  @Schema(example = "SD1300", description = "The Originator establishes this field as the date it would like to see displayed to the receiver for descriptive purposes. This field is never used to control timing of any computer or manual operation. It is solely for descriptive purposes. The RDFI should not assume any specific format. ")
  public String getCompanyDescriptiveDate() {
    return companyDescriptiveDate;
  }

  public void setCompanyDescriptiveDate(String companyDescriptiveDate) {
    this.companyDescriptiveDate = companyDescriptiveDate;
  }

  public BatchHeader effectiveEntryDate(String effectiveEntryDate) {
    this.effectiveEntryDate = effectiveEntryDate;
    return this;
  }

   /**
   * Date on which the entries are to settle. (Format YYMMDD - Y&#x3D;Year, M&#x3D;Month, D&#x3D;Day)
   * @return effectiveEntryDate
  **/
  @Schema(example = "190102", description = "Date on which the entries are to settle. (Format YYMMDD - Y=Year, M=Month, D=Day)")
  public String getEffectiveEntryDate() {
    return effectiveEntryDate;
  }

  public void setEffectiveEntryDate(String effectiveEntryDate) {
    this.effectiveEntryDate = effectiveEntryDate;
  }

  public BatchHeader originatorStatusCode(Integer originatorStatusCode) {
    this.originatorStatusCode = originatorStatusCode;
    return this;
  }

   /**
   * ODFI initiating the Entry. | 0 - ADV File prepared by an ACH Operator. | 1 - This code identifies the Originator as a depository financial institution. | 2 - This code identifies the Originator as a Federal Government entity or agency. 
   * @return originatorStatusCode
  **/
  @Schema(example = "1", description = "ODFI initiating the Entry. | 0 - ADV File prepared by an ACH Operator. | 1 - This code identifies the Originator as a depository financial institution. | 2 - This code identifies the Originator as a Federal Government entity or agency. ")
  public Integer getOriginatorStatusCode() {
    return originatorStatusCode;
  }

  public void setOriginatorStatusCode(Integer originatorStatusCode) {
    this.originatorStatusCode = originatorStatusCode;
  }

  public BatchHeader odFIIdentification(String odFIIdentification) {
    this.odFIIdentification = odFIIdentification;
    return this;
  }

   /**
   * First 8 digits of the originating DFI transit routing number
   * @return odFIIdentification
  **/
  @Schema(example = "12345678", required = true, description = "First 8 digits of the originating DFI transit routing number")
  public String getOdFIIdentification() {
    return odFIIdentification;
  }

  public void setOdFIIdentification(String odFIIdentification) {
    this.odFIIdentification = odFIIdentification;
  }

  public BatchHeader batchNumber(Integer batchNumber) {
    this.batchNumber = batchNumber;
    return this;
  }

   /**
   * BatchNumber is assigned in ascending sequence to each batch by the ODFI or its Sending Point in a given file of entries. Since the batch number in the Batch Header Record and the Batch Control Record is the same, the ascending sequence number should be assigned by batch and not by record. 
   * @return batchNumber
  **/
  @Schema(example = "0", required = true, description = "BatchNumber is assigned in ascending sequence to each batch by the ODFI or its Sending Point in a given file of entries. Since the batch number in the Batch Header Record and the Batch Control Record is the same, the ascending sequence number should be assigned by batch and not by record. ")
  public Integer getBatchNumber() {
    return batchNumber;
  }

  public void setBatchNumber(Integer batchNumber) {
    this.batchNumber = batchNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchHeader batchHeader = (BatchHeader) o;
    return Objects.equals(this.ID, batchHeader.ID) &&
        Objects.equals(this.serviceClassCode, batchHeader.serviceClassCode) &&
        Objects.equals(this.companyName, batchHeader.companyName) &&
        Objects.equals(this.companyDiscretionaryData, batchHeader.companyDiscretionaryData) &&
        Objects.equals(this.companyIdentification, batchHeader.companyIdentification) &&
        Objects.equals(this.standardEntryClassCode, batchHeader.standardEntryClassCode) &&
        Objects.equals(this.companyEntryDescription, batchHeader.companyEntryDescription) &&
        Objects.equals(this.companyDescriptiveDate, batchHeader.companyDescriptiveDate) &&
        Objects.equals(this.effectiveEntryDate, batchHeader.effectiveEntryDate) &&
        Objects.equals(this.originatorStatusCode, batchHeader.originatorStatusCode) &&
        Objects.equals(this.odFIIdentification, batchHeader.odFIIdentification) &&
        Objects.equals(this.batchNumber, batchHeader.batchNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, serviceClassCode, companyName, companyDiscretionaryData, companyIdentification, standardEntryClassCode, companyEntryDescription, companyDescriptiveDate, effectiveEntryDate, originatorStatusCode, odFIIdentification, batchNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchHeader {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    serviceClassCode: ").append(toIndentedString(serviceClassCode)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyDiscretionaryData: ").append(toIndentedString(companyDiscretionaryData)).append("\n");
    sb.append("    companyIdentification: ").append(toIndentedString(companyIdentification)).append("\n");
    sb.append("    standardEntryClassCode: ").append(toIndentedString(standardEntryClassCode)).append("\n");
    sb.append("    companyEntryDescription: ").append(toIndentedString(companyEntryDescription)).append("\n");
    sb.append("    companyDescriptiveDate: ").append(toIndentedString(companyDescriptiveDate)).append("\n");
    sb.append("    effectiveEntryDate: ").append(toIndentedString(effectiveEntryDate)).append("\n");
    sb.append("    originatorStatusCode: ").append(toIndentedString(originatorStatusCode)).append("\n");
    sb.append("    odFIIdentification: ").append(toIndentedString(odFIIdentification)).append("\n");
    sb.append("    batchNumber: ").append(toIndentedString(batchNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
