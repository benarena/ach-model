/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Addenda14
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class Addenda14 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("typeCode")
  private String typeCode = null;

  @SerializedName("RDFIName")
  private String rdFIName = null;

  @SerializedName("RDFIIDNumberQualifier")
  private String rdFIIDNumberQualifier = null;

  @SerializedName("RDFIIdentification")
  private String rdFIIdentification = null;

  @SerializedName("RDFIBranchCountryCode")
  private String rdFIBranchCountryCode = null;

  @SerializedName("entryDetailSequenceNumber")
  private BigDecimal entryDetailSequenceNumber = null;

  public Addenda14 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Client-defined string used as a reference to this record.
   * @return id
  **/
  @Schema(example = "5ca8d25a", description = "Client-defined string used as a reference to this record.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Addenda14 typeCode(String typeCode) {
    this.typeCode = typeCode;
    return this;
  }

   /**
   * 14 - NACHA regulations
   * @return typeCode
  **/
  @Schema(example = "14", required = true, description = "14 - NACHA regulations")
  public String getTypeCode() {
    return typeCode;
  }

  public void setTypeCode(String typeCode) {
    this.typeCode = typeCode;
  }

  public Addenda14 rdFIName(String rdFIName) {
    this.rdFIName = rdFIName;
    return this;
  }

   /**
   * Name of the Receiver bank
   * @return rdFIName
  **/
  @Schema(example = "Citadel Bank", required = true, description = "Name of the Receiver bank")
  public String getRdFIName() {
    return rdFIName;
  }

  public void setRdFIName(String rdFIName) {
    this.rdFIName = rdFIName;
  }

  public Addenda14 rdFIIDNumberQualifier(String rdFIIDNumberQualifier) {
    this.rdFIIDNumberQualifier = rdFIIDNumberQualifier;
    return this;
  }

   /**
   * Receiving DFI Identification Number Qualifier. The 2-digit code that identifies the numbering scheme used in the Receiving DFI Identification Number field: &#x27;01&#x27; &#x3D; National Clearing System | &#x27;02&#x27; &#x3D; BIC Code | &#x27;03&#x27; &#x3D; IBAN Code 
   * @return rdFIIDNumberQualifier
  **/
  @Schema(example = "01", required = true, description = "Receiving DFI Identification Number Qualifier. The 2-digit code that identifies the numbering scheme used in the Receiving DFI Identification Number field: '01' = National Clearing System | '02' = BIC Code | '03' = IBAN Code ")
  public String getRdFIIDNumberQualifier() {
    return rdFIIDNumberQualifier;
  }

  public void setRdFIIDNumberQualifier(String rdFIIDNumberQualifier) {
    this.rdFIIDNumberQualifier = rdFIIDNumberQualifier;
  }

  public Addenda14 rdFIIdentification(String rdFIIdentification) {
    this.rdFIIdentification = rdFIIdentification;
    return this;
  }

   /**
   * This field contains the bank identification number of the DFI at which the Receiver maintains his account.
   * @return rdFIIdentification
  **/
  @Schema(example = "98765432", required = true, description = "This field contains the bank identification number of the DFI at which the Receiver maintains his account.")
  public String getRdFIIdentification() {
    return rdFIIdentification;
  }

  public void setRdFIIdentification(String rdFIIdentification) {
    this.rdFIIdentification = rdFIIdentification;
  }

  public Addenda14 rdFIBranchCountryCode(String rdFIBranchCountryCode) {
    this.rdFIBranchCountryCode = rdFIBranchCountryCode;
    return this;
  }

   /**
   * Receiving DFI Branch Country Code USb\&quot; &#x3D; United States (\&quot;b\&quot; indicates a blank space) This 3 position field contains a 2-character code as approved by the International Organization for Standardization (ISO) used to identify the country in which the branch of the bank that receives the entry is located. Values for other countries can be found on the International Organization for Standardization website: www.iso.org 
   * @return rdFIBranchCountryCode
  **/
  @Schema(example = "US ", required = true, description = "Receiving DFI Branch Country Code USb\" = United States (\"b\" indicates a blank space) This 3 position field contains a 2-character code as approved by the International Organization for Standardization (ISO) used to identify the country in which the branch of the bank that receives the entry is located. Values for other countries can be found on the International Organization for Standardization website: www.iso.org ")
  public String getRdFIBranchCountryCode() {
    return rdFIBranchCountryCode;
  }

  public void setRdFIBranchCountryCode(String rdFIBranchCountryCode) {
    this.rdFIBranchCountryCode = rdFIBranchCountryCode;
  }

  public Addenda14 entryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
    return this;
  }

   /**
   * EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record&#x27;s trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. 
   * @return entryDetailSequenceNumber
  **/
  @Schema(example = "2618117", required = true, description = "EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record's trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. ")
  public BigDecimal getEntryDetailSequenceNumber() {
    return entryDetailSequenceNumber;
  }

  public void setEntryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Addenda14 addenda14 = (Addenda14) o;
    return Objects.equals(this.id, addenda14.id) &&
        Objects.equals(this.typeCode, addenda14.typeCode) &&
        Objects.equals(this.rdFIName, addenda14.rdFIName) &&
        Objects.equals(this.rdFIIDNumberQualifier, addenda14.rdFIIDNumberQualifier) &&
        Objects.equals(this.rdFIIdentification, addenda14.rdFIIdentification) &&
        Objects.equals(this.rdFIBranchCountryCode, addenda14.rdFIBranchCountryCode) &&
        Objects.equals(this.entryDetailSequenceNumber, addenda14.entryDetailSequenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, typeCode, rdFIName, rdFIIDNumberQualifier, rdFIIdentification, rdFIBranchCountryCode, entryDetailSequenceNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Addenda14 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    typeCode: ").append(toIndentedString(typeCode)).append("\n");
    sb.append("    rdFIName: ").append(toIndentedString(rdFIName)).append("\n");
    sb.append("    rdFIIDNumberQualifier: ").append(toIndentedString(rdFIIDNumberQualifier)).append("\n");
    sb.append("    rdFIIdentification: ").append(toIndentedString(rdFIIdentification)).append("\n");
    sb.append("    rdFIBranchCountryCode: ").append(toIndentedString(rdFIBranchCountryCode)).append("\n");
    sb.append("    entryDetailSequenceNumber: ").append(toIndentedString(entryDetailSequenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
