/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Addenda99
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class Addenda99 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("typeCode")
  private String typeCode = null;

  @SerializedName("returnCode")
  private String returnCode = null;

  @SerializedName("originalTrace")
  private String originalTrace = null;

  @SerializedName("dateOfDeath")
  private String dateOfDeath = null;

  @SerializedName("originalDFI")
  private String originalDFI = null;

  @SerializedName("addendaInformation")
  private String addendaInformation = null;

  @SerializedName("traceNumber")
  private String traceNumber = null;

  public Addenda99 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Client-defined string used as a reference to this record.
   * @return id
  **/
  @Schema(example = "5ca8d25a", description = "Client-defined string used as a reference to this record.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Addenda99 typeCode(String typeCode) {
    this.typeCode = typeCode;
    return this;
  }

   /**
   * 99 - NACHA regulations
   * @return typeCode
  **/
  @Schema(example = "99", required = true, description = "99 - NACHA regulations")
  public String getTypeCode() {
    return typeCode;
  }

  public void setTypeCode(String typeCode) {
    this.typeCode = typeCode;
  }

  public Addenda99 returnCode(String returnCode) {
    this.returnCode = returnCode;
    return this;
  }

   /**
   * Standard code used by an ACH Operator or RDFI to describe the reason for returning an Entry.
   * @return returnCode
  **/
  @Schema(example = "R01", required = true, description = "Standard code used by an ACH Operator or RDFI to describe the reason for returning an Entry.")
  public String getReturnCode() {
    return returnCode;
  }

  public void setReturnCode(String returnCode) {
    this.returnCode = returnCode;
  }

  public Addenda99 originalTrace(String originalTrace) {
    this.originalTrace = originalTrace;
    return this;
  }

   /**
   * OriginalTrace This field contains the Trace Number as originally included on the forward Entry or Prenotification. The RDFI must include the Original Entry Trace Number in the Addenda Record of an Entry being returned to an ODFI, in the Addenda Record of an 98, within an Acknowledgment Entry, or with an RDFI request for a copy of an authorization. 
   * @return originalTrace
  **/
  @Schema(example = "214874812", required = true, description = "OriginalTrace This field contains the Trace Number as originally included on the forward Entry or Prenotification. The RDFI must include the Original Entry Trace Number in the Addenda Record of an Entry being returned to an ODFI, in the Addenda Record of an 98, within an Acknowledgment Entry, or with an RDFI request for a copy of an authorization. ")
  public String getOriginalTrace() {
    return originalTrace;
  }

  public void setOriginalTrace(String originalTrace) {
    this.originalTrace = originalTrace;
  }

  public Addenda99 dateOfDeath(String dateOfDeath) {
    this.dateOfDeath = dateOfDeath;
    return this;
  }

   /**
   * The field date of death is to be supplied on Entries being returned for reason of death (return reason codes R14 and R15). (Format YYMMDD - Y&#x3D;Year, M&#x3D;Month, D&#x3D;Day)
   * @return dateOfDeath
  **/
  @Schema(example = "200102", required = true, description = "The field date of death is to be supplied on Entries being returned for reason of death (return reason codes R14 and R15). (Format YYMMDD - Y=Year, M=Month, D=Day)")
  public String getDateOfDeath() {
    return dateOfDeath;
  }

  public void setDateOfDeath(String dateOfDeath) {
    this.dateOfDeath = dateOfDeath;
  }

  public Addenda99 originalDFI(String originalDFI) {
    this.originalDFI = originalDFI;
    return this;
  }

   /**
   * Contains the Receiving DFI Identification (addenda.RDFIIdentification) as originally included on the forward Entry or Prenotification that the RDFI is returning or correcting.
   * @return originalDFI
  **/
  @Schema(example = "98765432", required = true, description = "Contains the Receiving DFI Identification (addenda.RDFIIdentification) as originally included on the forward Entry or Prenotification that the RDFI is returning or correcting.")
  public String getOriginalDFI() {
    return originalDFI;
  }

  public void setOriginalDFI(String originalDFI) {
    this.originalDFI = originalDFI;
  }

  public Addenda99 addendaInformation(String addendaInformation) {
    this.addendaInformation = addendaInformation;
    return this;
  }

   /**
   * Information related to the return
   * @return addendaInformation
  **/
  @Schema(example = "text", description = "Information related to the return")
  public String getAddendaInformation() {
    return addendaInformation;
  }

  public void setAddendaInformation(String addendaInformation) {
    this.addendaInformation = addendaInformation;
  }

  public Addenda99 traceNumber(String traceNumber) {
    this.traceNumber = traceNumber;
    return this;
  }

   /**
   * Matches the Entry Detail Trace Number of the entry being returned.
   * @return traceNumber
  **/
  @Schema(example = "214874812", description = "Matches the Entry Detail Trace Number of the entry being returned.")
  public String getTraceNumber() {
    return traceNumber;
  }

  public void setTraceNumber(String traceNumber) {
    this.traceNumber = traceNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Addenda99 addenda99 = (Addenda99) o;
    return Objects.equals(this.id, addenda99.id) &&
        Objects.equals(this.typeCode, addenda99.typeCode) &&
        Objects.equals(this.returnCode, addenda99.returnCode) &&
        Objects.equals(this.originalTrace, addenda99.originalTrace) &&
        Objects.equals(this.dateOfDeath, addenda99.dateOfDeath) &&
        Objects.equals(this.originalDFI, addenda99.originalDFI) &&
        Objects.equals(this.addendaInformation, addenda99.addendaInformation) &&
        Objects.equals(this.traceNumber, addenda99.traceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, typeCode, returnCode, originalTrace, dateOfDeath, originalDFI, addendaInformation, traceNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Addenda99 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    typeCode: ").append(toIndentedString(typeCode)).append("\n");
    sb.append("    returnCode: ").append(toIndentedString(returnCode)).append("\n");
    sb.append("    originalTrace: ").append(toIndentedString(originalTrace)).append("\n");
    sb.append("    dateOfDeath: ").append(toIndentedString(dateOfDeath)).append("\n");
    sb.append("    originalDFI: ").append(toIndentedString(originalDFI)).append("\n");
    sb.append("    addendaInformation: ").append(toIndentedString(addendaInformation)).append("\n");
    sb.append("    traceNumber: ").append(toIndentedString(traceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
