/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ADVBatchControl;
import io.swagger.client.model.ADVEntryDetail;
import io.swagger.client.model.Batch;
import io.swagger.client.model.FileControl;
import io.swagger.client.model.FileHeader;
import io.swagger.client.model.IATBatch;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CreateFile
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class CreateFile {
  @SerializedName("ID")
  private String ID = null;

  @SerializedName("fileHeader")
  private FileHeader fileHeader = null;

  @SerializedName("batches")
  private List<Batch> batches = null;

  @SerializedName("IATBatches")
  private List<IATBatch> iaTBatches = null;

  @SerializedName("fileControl")
  private FileControl fileControl = null;

  @SerializedName("advEntryDetails")
  private List<ADVEntryDetail> advEntryDetails = null;

  @SerializedName("advBatchControl")
  private ADVBatchControl advBatchControl = null;

  public CreateFile ID(String ID) {
    this.ID = ID;
    return this;
  }

   /**
   * File ID
   * @return ID
  **/
  @Schema(example = "3f2d23ee214", description = "File ID")
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }

  public CreateFile fileHeader(FileHeader fileHeader) {
    this.fileHeader = fileHeader;
    return this;
  }

   /**
   * Get fileHeader
   * @return fileHeader
  **/
  @Schema(required = true, description = "")
  public FileHeader getFileHeader() {
    return fileHeader;
  }

  public void setFileHeader(FileHeader fileHeader) {
    this.fileHeader = fileHeader;
  }

  public CreateFile batches(List<Batch> batches) {
    this.batches = batches;
    return this;
  }

  public CreateFile addBatchesItem(Batch batchesItem) {
    if (this.batches == null) {
      this.batches = new ArrayList<Batch>();
    }
    this.batches.add(batchesItem);
    return this;
  }

   /**
   * Get batches
   * @return batches
  **/
  @Schema(description = "")
  public List<Batch> getBatches() {
    return batches;
  }

  public void setBatches(List<Batch> batches) {
    this.batches = batches;
  }

  public CreateFile iaTBatches(List<IATBatch> iaTBatches) {
    this.iaTBatches = iaTBatches;
    return this;
  }

  public CreateFile addIaTBatchesItem(IATBatch iaTBatchesItem) {
    if (this.iaTBatches == null) {
      this.iaTBatches = new ArrayList<IATBatch>();
    }
    this.iaTBatches.add(iaTBatchesItem);
    return this;
  }

   /**
   * Get iaTBatches
   * @return iaTBatches
  **/
  @Schema(description = "")
  public List<IATBatch> getIaTBatches() {
    return iaTBatches;
  }

  public void setIaTBatches(List<IATBatch> iaTBatches) {
    this.iaTBatches = iaTBatches;
  }

  public CreateFile fileControl(FileControl fileControl) {
    this.fileControl = fileControl;
    return this;
  }

   /**
   * Get fileControl
   * @return fileControl
  **/
  @Schema(description = "")
  public FileControl getFileControl() {
    return fileControl;
  }

  public void setFileControl(FileControl fileControl) {
    this.fileControl = fileControl;
  }

  public CreateFile advEntryDetails(List<ADVEntryDetail> advEntryDetails) {
    this.advEntryDetails = advEntryDetails;
    return this;
  }

  public CreateFile addAdvEntryDetailsItem(ADVEntryDetail advEntryDetailsItem) {
    if (this.advEntryDetails == null) {
      this.advEntryDetails = new ArrayList<ADVEntryDetail>();
    }
    this.advEntryDetails.add(advEntryDetailsItem);
    return this;
  }

   /**
   * Get advEntryDetails
   * @return advEntryDetails
  **/
  @Schema(description = "")
  public List<ADVEntryDetail> getAdvEntryDetails() {
    return advEntryDetails;
  }

  public void setAdvEntryDetails(List<ADVEntryDetail> advEntryDetails) {
    this.advEntryDetails = advEntryDetails;
  }

  public CreateFile advBatchControl(ADVBatchControl advBatchControl) {
    this.advBatchControl = advBatchControl;
    return this;
  }

   /**
   * Get advBatchControl
   * @return advBatchControl
  **/
  @Schema(description = "")
  public ADVBatchControl getAdvBatchControl() {
    return advBatchControl;
  }

  public void setAdvBatchControl(ADVBatchControl advBatchControl) {
    this.advBatchControl = advBatchControl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateFile createFile = (CreateFile) o;
    return Objects.equals(this.ID, createFile.ID) &&
        Objects.equals(this.fileHeader, createFile.fileHeader) &&
        Objects.equals(this.batches, createFile.batches) &&
        Objects.equals(this.iaTBatches, createFile.iaTBatches) &&
        Objects.equals(this.fileControl, createFile.fileControl) &&
        Objects.equals(this.advEntryDetails, createFile.advEntryDetails) &&
        Objects.equals(this.advBatchControl, createFile.advBatchControl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, fileHeader, batches, iaTBatches, fileControl, advEntryDetails, advBatchControl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateFile {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    fileHeader: ").append(toIndentedString(fileHeader)).append("\n");
    sb.append("    batches: ").append(toIndentedString(batches)).append("\n");
    sb.append("    iaTBatches: ").append(toIndentedString(iaTBatches)).append("\n");
    sb.append("    fileControl: ").append(toIndentedString(fileControl)).append("\n");
    sb.append("    advEntryDetails: ").append(toIndentedString(advEntryDetails)).append("\n");
    sb.append("    advBatchControl: ").append(toIndentedString(advBatchControl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
