/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ValidateOpts
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class ValidateOpts {
  @SerializedName("requireABAOrigin")
  private Boolean requireABAOrigin = false;

  @SerializedName("bypassOriginValidation")
  private Boolean bypassOriginValidation = false;

  @SerializedName("bypassDestinationValidation")
  private Boolean bypassDestinationValidation = false;

  public ValidateOpts requireABAOrigin(Boolean requireABAOrigin) {
    this.requireABAOrigin = requireABAOrigin;
    return this;
  }

   /**
   * Require that the FileHeader ImmediateOrigin routing number which checksum matches.
   * @return requireABAOrigin
  **/
  @Schema(description = "Require that the FileHeader ImmediateOrigin routing number which checksum matches.")
  public Boolean isRequireABAOrigin() {
    return requireABAOrigin;
  }

  public void setRequireABAOrigin(Boolean requireABAOrigin) {
    this.requireABAOrigin = requireABAOrigin;
  }

  public ValidateOpts bypassOriginValidation(Boolean bypassOriginValidation) {
    this.bypassOriginValidation = bypassOriginValidation;
    return this;
  }

   /**
   * Skip ImmediateOrigin validation steps.
   * @return bypassOriginValidation
  **/
  @Schema(description = "Skip ImmediateOrigin validation steps.")
  public Boolean isBypassOriginValidation() {
    return bypassOriginValidation;
  }

  public void setBypassOriginValidation(Boolean bypassOriginValidation) {
    this.bypassOriginValidation = bypassOriginValidation;
  }

  public ValidateOpts bypassDestinationValidation(Boolean bypassDestinationValidation) {
    this.bypassDestinationValidation = bypassDestinationValidation;
    return this;
  }

   /**
   * Skip ImmediateDestination validation steps.
   * @return bypassDestinationValidation
  **/
  @Schema(description = "Skip ImmediateDestination validation steps.")
  public Boolean isBypassDestinationValidation() {
    return bypassDestinationValidation;
  }

  public void setBypassDestinationValidation(Boolean bypassDestinationValidation) {
    this.bypassDestinationValidation = bypassDestinationValidation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateOpts validateOpts = (ValidateOpts) o;
    return Objects.equals(this.requireABAOrigin, validateOpts.requireABAOrigin) &&
        Objects.equals(this.bypassOriginValidation, validateOpts.bypassOriginValidation) &&
        Objects.equals(this.bypassDestinationValidation, validateOpts.bypassDestinationValidation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requireABAOrigin, bypassOriginValidation, bypassDestinationValidation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateOpts {\n");
    
    sb.append("    requireABAOrigin: ").append(toIndentedString(requireABAOrigin)).append("\n");
    sb.append("    bypassOriginValidation: ").append(toIndentedString(bypassOriginValidation)).append("\n");
    sb.append("    bypassDestinationValidation: ").append(toIndentedString(bypassDestinationValidation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
