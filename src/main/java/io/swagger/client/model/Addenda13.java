/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Addenda13
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class Addenda13 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("typeCode")
  private String typeCode = null;

  @SerializedName("ODFIName")
  private String odFIName = null;

  @SerializedName("ODFIIDNumberQualifier")
  private String odFIIDNumberQualifier = null;

  @SerializedName("ODFIBranchCountryCode")
  private String odFIBranchCountryCode = null;

  @SerializedName("entryDetailSequenceNumber")
  private BigDecimal entryDetailSequenceNumber = null;

  public Addenda13 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Client-defined string used as a reference to this record.
   * @return id
  **/
  @Schema(example = "5ca8d25a", description = "Client-defined string used as a reference to this record.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Addenda13 typeCode(String typeCode) {
    this.typeCode = typeCode;
    return this;
  }

   /**
   * 13 - NACHA regulations
   * @return typeCode
  **/
  @Schema(example = "13", required = true, description = "13 - NACHA regulations")
  public String getTypeCode() {
    return typeCode;
  }

  public void setTypeCode(String typeCode) {
    this.typeCode = typeCode;
  }

  public Addenda13 odFIName(String odFIName) {
    this.odFIName = odFIName;
    return this;
  }

   /**
   * Originating DFI Name For Outbound IAT Entries, this field must contain the name of the U.S. ODFI. For Inbound IATs: Name of the foreign bank providing funding for the payment transaction 
   * @return odFIName
  **/
  @Schema(example = "My Bank", required = true, description = "Originating DFI Name For Outbound IAT Entries, this field must contain the name of the U.S. ODFI. For Inbound IATs: Name of the foreign bank providing funding for the payment transaction ")
  public String getOdFIName() {
    return odFIName;
  }

  public void setOdFIName(String odFIName) {
    this.odFIName = odFIName;
  }

  public Addenda13 odFIIDNumberQualifier(String odFIIDNumberQualifier) {
    this.odFIIDNumberQualifier = odFIIDNumberQualifier;
    return this;
  }

   /**
   * Originating DFI Identification Number Qualifier. For Inbound IATs: The 2-digit code that identifies the numbering scheme used in the Foreign DFI Identification Number field: &#x27;01&#x27; &#x3D; National Clearing System | &#x27;02&#x27; &#x3D; BIC Code | &#x27;03&#x27; &#x3D; IBAN Code 
   * @return odFIIDNumberQualifier
  **/
  @Schema(example = "01", required = true, description = "Originating DFI Identification Number Qualifier. For Inbound IATs: The 2-digit code that identifies the numbering scheme used in the Foreign DFI Identification Number field: '01' = National Clearing System | '02' = BIC Code | '03' = IBAN Code ")
  public String getOdFIIDNumberQualifier() {
    return odFIIDNumberQualifier;
  }

  public void setOdFIIDNumberQualifier(String odFIIDNumberQualifier) {
    this.odFIIDNumberQualifier = odFIIDNumberQualifier;
  }

  public Addenda13 odFIBranchCountryCode(String odFIBranchCountryCode) {
    this.odFIBranchCountryCode = odFIBranchCountryCode;
    return this;
  }

   /**
   * Originating DFI Branch Country Code: USb &#x3D; United States //(\&quot;b\&quot; indicates a blank space) For Inbound IATs: This 3 position field contains a 2-character code as approved by the International Organization for Standardization (ISO) used to identify the country in which the branch of the bank that originated the entry is located. Values for other countries can be found on the International Organization for Standardization website: www.iso.org. 
   * @return odFIBranchCountryCode
  **/
  @Schema(example = "US ", required = true, description = "Originating DFI Branch Country Code: USb = United States //(\"b\" indicates a blank space) For Inbound IATs: This 3 position field contains a 2-character code as approved by the International Organization for Standardization (ISO) used to identify the country in which the branch of the bank that originated the entry is located. Values for other countries can be found on the International Organization for Standardization website: www.iso.org. ")
  public String getOdFIBranchCountryCode() {
    return odFIBranchCountryCode;
  }

  public void setOdFIBranchCountryCode(String odFIBranchCountryCode) {
    this.odFIBranchCountryCode = odFIBranchCountryCode;
  }

  public Addenda13 entryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
    return this;
  }

   /**
   * EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record&#x27;s trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. 
   * @return entryDetailSequenceNumber
  **/
  @Schema(example = "2618117", required = true, description = "EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record's trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. ")
  public BigDecimal getEntryDetailSequenceNumber() {
    return entryDetailSequenceNumber;
  }

  public void setEntryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Addenda13 addenda13 = (Addenda13) o;
    return Objects.equals(this.id, addenda13.id) &&
        Objects.equals(this.typeCode, addenda13.typeCode) &&
        Objects.equals(this.odFIName, addenda13.odFIName) &&
        Objects.equals(this.odFIIDNumberQualifier, addenda13.odFIIDNumberQualifier) &&
        Objects.equals(this.odFIBranchCountryCode, addenda13.odFIBranchCountryCode) &&
        Objects.equals(this.entryDetailSequenceNumber, addenda13.entryDetailSequenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, typeCode, odFIName, odFIIDNumberQualifier, odFIBranchCountryCode, entryDetailSequenceNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Addenda13 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    typeCode: ").append(toIndentedString(typeCode)).append("\n");
    sb.append("    odFIName: ").append(toIndentedString(odFIName)).append("\n");
    sb.append("    odFIIDNumberQualifier: ").append(toIndentedString(odFIIDNumberQualifier)).append("\n");
    sb.append("    odFIBranchCountryCode: ").append(toIndentedString(odFIBranchCountryCode)).append("\n");
    sb.append("    entryDetailSequenceNumber: ").append(toIndentedString(entryDetailSequenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
