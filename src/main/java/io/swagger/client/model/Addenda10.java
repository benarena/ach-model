/*
 * ACH API
 * Moov ACH ([Automated Clearing House](https://en.wikipedia.org/wiki/Automated_Clearing_House)) implements an HTTP API for creating, parsing, and validating ACH files. ACH is the primary method of electronic money movement throughout the United States.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * Addenda10
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2021-06-23T19:59:31.531Z[GMT]")
public class Addenda10 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("typeCode")
  private String typeCode = null;

  @SerializedName("transactionTypeCode")
  private String transactionTypeCode = null;

  @SerializedName("foreignPaymentAmount")
  private BigDecimal foreignPaymentAmount = null;

  @SerializedName("foreignTraceNumber")
  private String foreignTraceNumber = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("entryDetailSequenceNumber")
  private BigDecimal entryDetailSequenceNumber = null;

  public Addenda10 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Client-defined string used as a reference to this record.
   * @return id
  **/
  @Schema(example = "5ca8d25a", description = "Client-defined string used as a reference to this record.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Addenda10 typeCode(String typeCode) {
    this.typeCode = typeCode;
    return this;
  }

   /**
   * 10 - NACHA regulations
   * @return typeCode
  **/
  @Schema(example = "10", required = true, description = "10 - NACHA regulations")
  public String getTypeCode() {
    return typeCode;
  }

  public void setTypeCode(String typeCode) {
    this.typeCode = typeCode;
  }

  public Addenda10 transactionTypeCode(String transactionTypeCode) {
    this.transactionTypeCode = transactionTypeCode;
    return this;
  }

   /**
   * Describes the type of payment: &#x27;ANN&#x27; &#x3D; Annuity | &#x27;BUS&#x27; &#x3D; Business/Commercial | &#x27;DEP&#x27; &#x3D; Deposit | &#x27;LOA&#x27; &#x3D; Loan | &#x27;MIS&#x27; &#x3D; Miscellaneous | &#x27;MOR&#x27; &#x3D; Mortgage | &#x27;PEN&#x27; &#x3D; Pension | &#x27;RLS&#x27; &#x3D; Rent/Lease | &#x27;REM&#x27; &#x3D; Remittance2 | &#x27;SAL&#x27; &#x3D; Salary/Payroll | &#x27;TAX&#x27; &#x3D; Tax | &#x27;TEL&#x27; &#x3D; Telephone-Initiated Transaction | &#x27;WEB&#x27; &#x3D; Internet-Initiated Transaction | &#x27;ARC&#x27; &#x3D; Accounts Receivable Entry | &#x27;BOC&#x27; &#x3D; Back Office Conversion Entry | &#x27;POP&#x27; &#x3D; Point of Purchase Entry | &#x27;RCK&#x27; &#x3D; Re-presented Check Entry 
   * @return transactionTypeCode
  **/
  @Schema(example = "TEL", description = "Describes the type of payment: 'ANN' = Annuity | 'BUS' = Business/Commercial | 'DEP' = Deposit | 'LOA' = Loan | 'MIS' = Miscellaneous | 'MOR' = Mortgage | 'PEN' = Pension | 'RLS' = Rent/Lease | 'REM' = Remittance2 | 'SAL' = Salary/Payroll | 'TAX' = Tax | 'TEL' = Telephone-Initiated Transaction | 'WEB' = Internet-Initiated Transaction | 'ARC' = Accounts Receivable Entry | 'BOC' = Back Office Conversion Entry | 'POP' = Point of Purchase Entry | 'RCK' = Re-presented Check Entry ")
  public String getTransactionTypeCode() {
    return transactionTypeCode;
  }

  public void setTransactionTypeCode(String transactionTypeCode) {
    this.transactionTypeCode = transactionTypeCode;
  }

  public Addenda10 foreignPaymentAmount(BigDecimal foreignPaymentAmount) {
    this.foreignPaymentAmount = foreignPaymentAmount;
    return this;
  }

   /**
   * For inbound IAT payments this field should contain the USD amount or may be blank.
   * @return foreignPaymentAmount
  **/
  @Schema(example = "1021441", required = true, description = "For inbound IAT payments this field should contain the USD amount or may be blank.")
  public BigDecimal getForeignPaymentAmount() {
    return foreignPaymentAmount;
  }

  public void setForeignPaymentAmount(BigDecimal foreignPaymentAmount) {
    this.foreignPaymentAmount = foreignPaymentAmount;
  }

  public Addenda10 foreignTraceNumber(String foreignTraceNumber) {
    this.foreignTraceNumber = foreignTraceNumber;
    return this;
  }

   /**
   * Trace number
   * @return foreignTraceNumber
  **/
  @Schema(example = "19846249812", description = "Trace number")
  public String getForeignTraceNumber() {
    return foreignTraceNumber;
  }

  public void setForeignTraceNumber(String foreignTraceNumber) {
    this.foreignTraceNumber = foreignTraceNumber;
  }

  public Addenda10 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Receiving Company Name/Individual Name
   * @return name
  **/
  @Schema(example = "Jane Smith", required = true, description = "Receiving Company Name/Individual Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Addenda10 entryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
    return this;
  }

   /**
   * EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record&#x27;s trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. 
   * @return entryDetailSequenceNumber
  **/
  @Schema(example = "2618117", required = true, description = "EntryDetailSequenceNumber contains the ascending sequence number section of the Entry Detail or Corporate Entry Detail Record's trace number. This number is the same as the last seven digits of the trace number of the related Entry Detail Record or Corporate Entry Detail Record. ")
  public BigDecimal getEntryDetailSequenceNumber() {
    return entryDetailSequenceNumber;
  }

  public void setEntryDetailSequenceNumber(BigDecimal entryDetailSequenceNumber) {
    this.entryDetailSequenceNumber = entryDetailSequenceNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Addenda10 addenda10 = (Addenda10) o;
    return Objects.equals(this.id, addenda10.id) &&
        Objects.equals(this.typeCode, addenda10.typeCode) &&
        Objects.equals(this.transactionTypeCode, addenda10.transactionTypeCode) &&
        Objects.equals(this.foreignPaymentAmount, addenda10.foreignPaymentAmount) &&
        Objects.equals(this.foreignTraceNumber, addenda10.foreignTraceNumber) &&
        Objects.equals(this.name, addenda10.name) &&
        Objects.equals(this.entryDetailSequenceNumber, addenda10.entryDetailSequenceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, typeCode, transactionTypeCode, foreignPaymentAmount, foreignTraceNumber, name, entryDetailSequenceNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Addenda10 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    typeCode: ").append(toIndentedString(typeCode)).append("\n");
    sb.append("    transactionTypeCode: ").append(toIndentedString(transactionTypeCode)).append("\n");
    sb.append("    foreignPaymentAmount: ").append(toIndentedString(foreignPaymentAmount)).append("\n");
    sb.append("    foreignTraceNumber: ").append(toIndentedString(foreignTraceNumber)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    entryDetailSequenceNumber: ").append(toIndentedString(entryDetailSequenceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
